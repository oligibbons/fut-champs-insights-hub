@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&family=Space+Mono:wght@400;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* THIS IS THE DEFINITIVE FIX:
  We are defining the standard shadcn/ui variables (--background, --foreground, etc.)
  and telling them to use the values from your custom theme variables 
  (--theme-background, --theme-text, etc.) which will be set by your useTheme.tsx hook.
  This creates a bridge that makes the two systems work together.
*/
@layer base {
  :root {
    --background: var(--theme-background);
    --foreground: var(--theme-text);
    --card: var(--theme-card-bg);
    --card-foreground: var(--theme-text);
    --popover: var(--theme-card-bg);
    --popover-foreground: var(--theme-text);
    --primary: var(--theme-primary);
    --primary-foreground: var(--theme-text);
    --secondary: var(--theme-secondary);
    --secondary-foreground: var(--theme-text);
    --muted: var(--theme-muted);
    --muted-foreground: var(--theme-text);
    --accent: var(--theme-accent);
    --accent-foreground: var(--theme-text);
    --destructive: var(--theme-error);
    --border: var(--theme-border);
    --input: var(--theme-border);
    --ring: var(--theme-primary);
    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    /* Let the useTheme hook handle the background gradient */
    font-feature-settings: "rlig" 1, "calt" 1;
    font-family: 'Poppins', sans-serif;
  }
}
